-- MySQL Script generated by MySQL Workbench
-- Thu Nov 16 19:24:16 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema fotograf
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fotograf
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fotograf` DEFAULT CHARACTER SET utf8 ;
USE `fotograf` ;

-- -----------------------------------------------------
-- Table `fotograf`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`users` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `name` VARCHAR(255) NULL,
  `surname` VARCHAR(255) NULL,
  `photo` BLOB NULL,
  `city` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `tel` VARCHAR(20) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`roles` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`user_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`user_roles` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`user_roles` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `fk_User_Role_User_idx` (`user_id` ASC),
  INDEX `fk_User_Role_Role1_idx` (`role_id` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_User_Role_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `fotograf`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_User_Role_Role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `fotograf`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

START TRANSACTION;
USE `fotograf`;

INSERT INTO `fotograf`.`roles` (`id`, `name`) VALUES (1, 'ROLE_USER');
INSERT INTO `fotograf`.`roles` (`id`, `name`) VALUES (2, 'ROLE_ADMIN');
INSERT INTO users VALUES (1, 'admin', '$2a$11$uSXS6rLJ91WjgOHhEGDx..VGs7MkKZV68Lv5r1uwFu7HgtRn3dcXG', 'admin', 'admin', NULL, NULL, NULL, NULL);
INSERT INTO user_roles VALUES (1, 2);
COMMIT;