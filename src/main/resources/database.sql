-- MySQL Script generated by MySQL Workbench
-- Tue Dec 12 11:30:44 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema fotograf
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fotograf
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fotograf` DEFAULT CHARACTER SET utf8 ;
USE `fotograf` ;

-- -----------------------------------------------------
-- Table `fotograf`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`users` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `name` VARCHAR(255) NULL,
  `surname` VARCHAR(255) NULL,
  `photo` LONGBLOB NULL,
  `city` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `tel` VARCHAR(20) NULL,
  PRIMARY KEY (`id`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`roles` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`user_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`user_roles` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`user_roles` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `fk_User_Role_User_idx` (`user_id` ASC),
  INDEX `fk_User_Role_Role1_idx` (`role_id` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  PRIMARY KEY (`user_id`, `role_id`),
  CONSTRAINT `fk_User_Role_User`
  FOREIGN KEY (`user_id`)
  REFERENCES `fotograf`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_User_Role_Role1`
  FOREIGN KEY (`role_id`)
  REFERENCES `fotograf`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`albums` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`albums` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `user_roles_user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Album_User_Role1_idx` (`user_roles_user_id` ASC),
  CONSTRAINT `fk_Album_User_Role1`
  FOREIGN KEY (`user_roles_user_id`)
  REFERENCES `fotograf`.`user_roles` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`pictures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`pictures` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`pictures` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL,
  `photoPath` VARCHAR(255) NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Picture_Album1_idx` (`album_id` ASC),
  CONSTRAINT `fk_Picture_Album1`
  FOREIGN KEY (`album_id`)
  REFERENCES `fotograf`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`scores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`scores` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`scores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `value` DOUBLE NULL,
  `user_roles_user_id` INT NOT NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Score_User_Role1_idx` (`user_roles_user_id` ASC),
  INDEX `fk_Score_Album1_idx` (`album_id` ASC),
  CONSTRAINT `fk_Score_User_Role1`
  FOREIGN KEY (`user_roles_user_id`)
  REFERENCES `fotograf`.`user_roles` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Score_Album1`
  FOREIGN KEY (`album_id`)
  REFERENCES `fotograf`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`comments` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` TEXT NULL,
  `user_roles_user_id` INT NOT NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Comment_User_Role1_idx` (`user_roles_user_id` ASC),
  INDEX `fk_Comment_Album1_idx` (`album_id` ASC),
  CONSTRAINT `fk_Comment_User_Role1`
  FOREIGN KEY (`user_roles_user_id`)
  REFERENCES `fotograf`.`user_roles` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Comment_Album1`
  FOREIGN KEY (`album_id`)
  REFERENCES `fotograf`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`order` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `klient_id` INT NULL,
  `fotograf_id` INT NULL,
  `data_zamowienia` DATETIME NULL,
  `termin_wykonania` DATETIME NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`orders` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`orders` (
  `user_roles_user_id` INT NOT NULL,
  `user_roles_role_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`user_roles_user_id`, `user_roles_role_id`, `order_id`),
  INDEX `fk_user_roles_has_order_order1_idx` (`order_id` ASC),
  INDEX `fk_user_roles_has_order_user_roles1_idx` (`user_roles_user_id` ASC, `user_roles_role_id` ASC),
  CONSTRAINT `fk_user_roles_has_order_user_roles1`
  FOREIGN KEY (`user_roles_user_id` , `user_roles_role_id`)
  REFERENCES `fotograf`.`user_roles` (`user_id` , `role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_roles_has_order_order1`
  FOREIGN KEY (`order_id`)
  REFERENCES `fotograf`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`working_hours`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`working_hours` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`working_hours` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `begin` DATETIME NULL,
  `end` DATETIME NULL,
  PRIMARY KEY (`id`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fotograf`.`calendar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fotograf`.`calendar` ;

CREATE TABLE IF NOT EXISTS `fotograf`.`calendar` (
  `user_roles_user_id` INT NOT NULL,
  `user_roles_role_id` INT NOT NULL,
  `working_hours_id` INT NOT NULL,
  PRIMARY KEY (`user_roles_user_id`, `user_roles_role_id`, `working_hours_id`),
  INDEX `fk_user_roles_has_working_hours_working_hours1_idx` (`working_hours_id` ASC),
  INDEX `fk_user_roles_has_working_hours_user_roles1_idx` (`user_roles_user_id` ASC, `user_roles_role_id` ASC),
  CONSTRAINT `fk_user_roles_has_working_hours_user_roles1`
  FOREIGN KEY (`user_roles_user_id` , `user_roles_role_id`)
  REFERENCES `fotograf`.`user_roles` (`user_id` , `role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_roles_has_working_hours_working_hours1`
  FOREIGN KEY (`working_hours_id`)
  REFERENCES `fotograf`.`working_hours` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `fotograf`.`roles`
-- -----------------------------------------------------
START TRANSACTION;
USE `fotograf`;
INSERT INTO `fotograf`.`roles` (`id`, `name`) VALUES (1, 'ROLE_USER');
INSERT INTO `fotograf`.`roles` (`id`, `name`) VALUES (2, 'ROLE_ADMIN');
INSERT INTO `fotograf`.`roles` (`id`, `name`) VALUES (3, 'ROLE_PHOTOGRAPHER');
INSERT INTO users VALUES (1, 'admin', '$2a$11$uSXS6rLJ91WjgOHhEGDx..VGs7MkKZV68Lv5r1uwFu7HgtRn3dcXG', 'admin', 'admin', NULL, NULL, NULL, NULL);
INSERT INTO user_roles VALUES (1, 2);

COMMIT;

